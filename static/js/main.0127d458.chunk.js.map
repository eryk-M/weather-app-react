{"version":3,"sources":["components/ResultView/CityName/CityName.js","components/ResultView/Days/Today/Today.js","components/ResultView/ResultView.js","components/FormSearch/FormSearch.js","components/App/App.js","serviceWorker.js","index.js"],"names":["CityName","props","name","country","react_default","a","createElement","className","concat","src","alt","Today","console","log","today","weather","icon","description","style","color","main","temp","toFixed","temp_min","temp_max","wind","speed","humidity","pressure","clouds","all","ResultView","_props$weather","city","error","day3","day4","day5","tomorrow","ResultView_CityName_CityName","Days_Today_Today","dt_txt","substr","Fragment","FormSearch","type","onChange","change","value","text","placeholder","onClick","submit","API","App","state","handleChange","e","_this","setState","target","handleSubmit","preventDefault","getAPI","fetch","then","response","ok","Error","json","data","prevState","list","catch","components_FormSearch_FormSearch","this","components_ResultView_ResultView","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0127d458.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CityName.scss\";\r\n\r\nconst CityName = props => {\r\n  const { name, country } = props;\r\n\r\n  return (\r\n    <h1 className=\"result__name\">\r\n      {`${name}, ${country}`}\r\n      <img\r\n        className=\"flag\"\r\n        src={`https://www.countryflags.io/${country}/shiny/64.png`}\r\n        alt=\"Flaga\"\r\n      />\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default CityName;\r\n","import React from \"react\";\r\n\r\nimport ResultView from \"../../ResultView\";\r\n\r\nconst Today = props => {\r\n  console.log(props.today.weather);\r\n  return (\r\n    <div className=\"result__info\">\r\n      <div className=\"result__day-wrapper\">\r\n        <h2 className=\"result__day\">Today</h2>\r\n        <img\r\n          src={`https://openweathermap.org/img/w/${props.weather[0].icon}.png`}\r\n          alt=\"Weather condition\"\r\n        />\r\n        <span className=\"result__description\">\r\n          {props.weather.weather[0].description}\r\n        </span>\r\n      </div>\r\n      <div className=\"result__details\">\r\n        <span className=\"result__temperature\">\r\n          <i\r\n            className=\"fas fa-thermometer-half\"\r\n            style={{\r\n              color: \"goldenrod\"\r\n            }}\r\n          />\r\n          Temperature: {props.main.temp.toFixed()} &#176;C\r\n        </span>\r\n        <span className=\"result__min-temp\">\r\n          <i className=\"fas fa-thermometer-empty\" />\r\n          Min temp: {props.weather.main.temp_min.toFixed()} &#176;C\r\n        </span>\r\n        <span className=\"result__max-temp\">\r\n          <i className=\"fas fa-thermometer-full\" />\r\n          Max temp: {props.weather.main.temp_max.toFixed()} &#176;C\r\n        </span>\r\n        <span className=\"result__wind-speed\">\r\n          <i className=\"fas fa-wind\" />\r\n          Wind speed: {(props.weather.wind.speed * 3.6).toFixed()} km/h\r\n        </span>\r\n        <span className=\"result__humidity\">\r\n          <i className=\"fas fa-tint\" />\r\n          Humidity: {props.weather.main.humidity}%\r\n        </span>\r\n        <span className=\"result__pressure\">\r\n          <i className=\"fas fa-compress\" />\r\n          Pressure: {props.weather.main.pressure} hPa\r\n        </span>\r\n        <span className=\"result__cloudiness\">\r\n          <i className=\"fas fa-cloud\" />\r\n          Cloudiness: {props.weather.clouds.all}%\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Today;\r\n","import React from \"react\";\r\nimport \"./ResultView.scss\";\r\n// import \"./CityName/CityName\";\r\nimport CityName from \"./CityName/CityName\";\r\n\r\nimport Today from \"./Days/Today/Today\";\r\n\r\nconst ResultView = props => {\r\n  const {\r\n    name,\r\n    city,\r\n    today,\r\n    error,\r\n    day3,\r\n    day4,\r\n    day5,\r\n    tomorrow,\r\n    country\r\n  } = props.weather;\r\n\r\n  let weather = null;\r\n\r\n  if (!error && city) {\r\n    weather = (\r\n      <div className=\"container\">\r\n        <div className=\"result__box\">\r\n          <CityName name={name} country={country} />\r\n          <Today weather={today} />\r\n          <div className=\"result__info\">\r\n            <div className=\"result__day-wrapper\">\r\n              <h2 className=\"result__day\">Tomorrow</h2>\r\n              <img\r\n                src={`https://openweathermap.org/img/w/${\r\n                  tomorrow.weather[0].icon\r\n                }.png`}\r\n                alt=\"Weather condition\"\r\n              />\r\n              <span className=\"result__description\">\r\n                {tomorrow.weather[0].description}\r\n              </span>\r\n            </div>\r\n            <div className=\"result__details\">\r\n              <span className=\"result__temperature\">\r\n                <i className=\"fas fa-thermometer-half\" />\r\n                Temperature: {tomorrow.main.temp.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__min-temp\">\r\n                <i className=\"fas fa-thermometer-empty\" />\r\n                Min temp: {tomorrow.main.temp_min.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__max-temp\">\r\n                <i className=\"fas fa-thermometer-full\" />\r\n                Max temp: {tomorrow.main.temp_max.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__wind-speed\">\r\n                <i className=\"fas fa-wind\" />\r\n                Wind speed: {(tomorrow.wind.speed * 3.6).toFixed()} km/h\r\n              </span>\r\n              <span className=\"result__humidity\">\r\n                <i className=\"fas fa-tint\" />\r\n                Humidity: {tomorrow.main.humidity}%\r\n              </span>\r\n              <span className=\"result__pressure\">\r\n                <i className=\"fas fa-compress\" />\r\n                Pressure: {tomorrow.main.pressure} hPa\r\n              </span>\r\n              <span className=\"result__cloudiness\">\r\n                <i className=\"fas fa-cloud\" />\r\n                Cloudiness: {tomorrow.clouds.all}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"result__info\">\r\n            <div className=\"result__day-wrapper\">\r\n              <h2 className=\"result__day\">{day3.dt_txt.substr(5, 11)}</h2>\r\n              <img\r\n                src={`https://openweathermap.org/img/w/${\r\n                  day3.weather[0].icon\r\n                }.png`}\r\n                alt=\"Weather condition\"\r\n              />\r\n              <span className=\"result__description\">\r\n                {day3.weather[0].description}\r\n              </span>\r\n            </div>\r\n            <div className=\"result__details\">\r\n              <span className=\"result__temperature\">\r\n                <i className=\"fas fa-thermometer-half\" />\r\n                Temperature: {day3.main.temp.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__min-temp\">\r\n                <i className=\"fas fa-thermometer-empty\" />\r\n                Min temp: {day3.main.temp_min.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__max-temp\">\r\n                <i className=\"fas fa-thermometer-full\" />\r\n                Max temp: {day3.main.temp_max.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__wind-speed\">\r\n                <i className=\"fas fa-wind\" />\r\n                Wind speed: {(day3.wind.speed * 3.6).toFixed()} km/h\r\n              </span>\r\n              <span className=\"result__humidity\">\r\n                <i className=\"fas fa-tint\" />\r\n                Humidity: {day3.main.humidity}%\r\n              </span>\r\n              <span className=\"result__pressure\">\r\n                <i className=\"fas fa-compress\" />\r\n                Pressure: {day3.main.pressure} hPa\r\n              </span>\r\n              <span className=\"result__cloudiness\">\r\n                <i className=\"fas fa-cloud\" />\r\n                Cloudiness: {day3.clouds.all}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"result__info\">\r\n            <div className=\"result__day-wrapper\">\r\n              <h2 className=\"result__day\">{day4.dt_txt.substr(5, 11)}</h2>\r\n              <img\r\n                src={`https://openweathermap.org/img/w/${\r\n                  day4.weather[0].icon\r\n                }.png`}\r\n                alt=\"Weather condition\"\r\n              />\r\n              <span className=\"result__description\">\r\n                {day4.weather[0].description}\r\n              </span>\r\n            </div>\r\n            <div className=\"result__details\">\r\n              <span className=\"result__temperature\">\r\n                <i className=\"fas fa-thermometer-half\" />\r\n                Temperature: {day4.main.temp.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__min-temp\">\r\n                <i className=\"fas fa-thermometer-empty\" />\r\n                Min temp: {day4.main.temp_min.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__max-temp\">\r\n                <i className=\"fas fa-thermometer-full\" />\r\n                Max temp: {day4.main.temp_max.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__wind-speed\">\r\n                <i className=\"fas fa-wind\" />\r\n                Wind speed: {(day4.wind.speed * 3.6).toFixed()} km/h\r\n              </span>\r\n              <span className=\"result__humidity\">\r\n                <i className=\"fas fa-tint\" />\r\n                Humidity: {day4.main.humidity}%\r\n              </span>\r\n              <span className=\"result__pressure\">\r\n                <i className=\"fas fa-compress\" />\r\n                Pressure: {day4.main.pressure} hPa\r\n              </span>\r\n              <span className=\"result__cloudiness\">\r\n                <i className=\"fas fa-cloud\" />\r\n                Cloudiness: {day4.clouds.all}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"result__info\">\r\n            <div className=\"result__day-wrapper\">\r\n              <h2 className=\"result__day\">{day5.dt_txt.substr(5, 11)}</h2>\r\n              <img\r\n                src={`https://openweathermap.org/img/w/${\r\n                  day5.weather[0].icon\r\n                }.png`}\r\n                alt=\"Weather condition\"\r\n              />\r\n              <span className=\"result__description\">\r\n                {day5.weather[0].description}\r\n              </span>\r\n            </div>\r\n            <div className=\"result__details\">\r\n              <span className=\"result__temperature\">\r\n                <i className=\"fas fa-thermometer-half\" />\r\n                Temperature: {day5.main.temp.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__min-temp\">\r\n                <i className=\"fas fa-thermometer-empty\" />\r\n                Min temp: {day5.main.temp_min.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__max-temp\">\r\n                <i className=\"fas fa-thermometer-full\" />\r\n                Max temp: {day5.main.temp_max.toFixed()} &#176;C\r\n              </span>\r\n              <span className=\"result__wind-speed\">\r\n                <i className=\"fas fa-wind\" />\r\n                Wind speed: {(day5.wind.speed * 3.6).toFixed()} km/h\r\n              </span>\r\n              <span className=\"result__humidity\">\r\n                <i className=\"fas fa-tint\" />\r\n                Humidity: {day5.main.humidity}%\r\n              </span>\r\n              <span className=\"result__pressure\">\r\n                <i className=\"fas fa-compress\" />\r\n                Pressure: {day5.main.pressure} hPa\r\n              </span>\r\n              <span className=\"result__cloudiness\">\r\n                <i className=\"fas fa-cloud\" />\r\n                Cloudiness: {day5.clouds.all}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div>{error ? `There is no ${city} on our planet` : weather}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultView;\r\n","import React from \"react\";\r\nimport \"./FormSearch.scss\";\r\n\r\nconst FormSearch = props => {\r\n  return (\r\n    <form className=\"search\">\r\n      <input\r\n        className=\"search__field\"\r\n        type=\"text\"\r\n        onChange={props.change}\r\n        value={props.text}\r\n        placeholder=\"Type town...\"\r\n      />\r\n      <button className=\"search__btn\" onClick={props.submit}>\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormSearch;\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport ResultView from \"../ResultView/ResultView\";\nimport FormSearch from \"../FormSearch/FormSearch\";\n\nconst API = \"b10af6aec43fd80647fc64535ed23b01\";\n\n// GET http://api.openweathermap.org/data/2.5/forecast?q=London,us&APPID=b10af6aec43fd80647fc64535ed23b01\n\nclass App extends Component {\n  state = {\n    city: \"\",\n    country: \"\",\n    value: \"\",\n    today: [],\n    tomorrow: [],\n    day3: [],\n    day4: [],\n    day5: [],\n    error: false\n  };\n\n  handleChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const getAPI = `https://api.openweathermap.org/data/2.5/forecast?q=${\n      this.state.value\n    }&units=metric&appid=${API}`;\n\n    fetch(getAPI)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"something is wrong\");\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState(prevState => ({\n          city: prevState.value,\n          name: data.city.name,\n          error: false,\n          country: data.city.country,\n          today: data.list[0],\n          tomorrow: data.list[8],\n          day3: data.list[16],\n          day4: data.list[24],\n          day5: data.list[32]\n        }));\n\n        console.log(data);\n      })\n      .catch(error => {\n        this.setState(prevState => ({\n          error: true,\n          city: prevState.value\n        }));\n      });\n  };\n\n  render() {\n    // console.log(this.state.tomorrow);\n    return (\n      <div className=\"App\">\n        <FormSearch\n          text={this.state.value}\n          change={this.handleChange}\n          submit={this.handleSubmit}\n        />\n        <ResultView weather={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}